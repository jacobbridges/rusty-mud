#+TITLE: README
#+AUTHOR: github.com/jacobbridges
#+STARTUP: indent

* What is this?

Right now, this is a mess.

The end goal is something like a MUD engine for Discord. Althought I
suspect the project will go stale around the time I get a demo
running..

* How to run this?

Right now there's not much. A quick ~cargo run~ will start the game
loop and ask accept user input from the console. Nothing has been
linked up to Discord yet, or networking in general. See my TODO list
later in this document.

* TODOS

** TODO Networking [0/4]
- [ ] Communication for a game is dedicated to a channel.
- [ ] Input is received from channel.
- [ ] Output is written to channel.
- [ ] Player is associated to channel.
** TODO NPCs [0/3]
- [ ] An NPC should have storage, but the storage is not accessible to
  the player.
  - Pickpocketing is a good idea, maybe tackle that as part of the
    assassin / rogue class.
  - Whatever items are in the NPCs storage should be merged with the
    corpse inventory on death.
- [ ] NPCs should be able to perform actions.
  - Game RunState for NPCs
  - Random actions to make the room feel alive
    - Example 1: "A robot pirate drunkenly sings a binary tune.."
    - Example 2: "A monkey opens a cabinet and looks inside"
- [ ] Player should be able to speak to NPCs
  - Keyword should follow the format: "{keyword} {target}, {message}"
    - e.g. "tell monkey, go away!"
  - Certain phrases should universally trigger a response
    - e.g. hi, hello, hey, etc
** TODO Combat [1/8]
- [ ] Entities which can be targeted for damage
- [ ] Component to track entity health
- [X] Game states (see [[https://github.com/amethyst/rustrogueliketutorial/blob/d6a4673ca59cffe057d4b0015b4920ecd5faa3b6/chapter-09-items/src/main.rs#L61-L139][this example in github]])
- [ ] Combat stats component
  - Base attack power / base defense
- [ ] Damage mitigation system
- [ ] Speed / initiative system
- [ ] Loot tables
  - Loot should match the difficulty of the downed foe
- [ ] Enemies generate corpses on death
  - Corpses should be "remove-only" storage containers
  - Items in the corpse container should be randomly selected from a
    loot table given the monster difficulty.
** TODO Inventory [8/11]
- [X] Define an item with components
  - [X] Can be stored in a container
  - [X] Can be looked at
  - [X] Can be dropped
- [X] Use the inventory system for moving items between storage
  components
- [X] Player input for picking up an item
- [X] Player input for storing an item in a container
- [X] Player input for listing items carried
- [X] Player input for listing items in a container
- [X] Player input for dropping items on the ground
- [X] Store entity references on container
- [ ] Player input to attempt to use item
- [ ] Player input to attempt to use item /on something/
- [ ] Remove-only flag on storage component
  - Should only allow items to be removed, not put in
** TODO Equipment [0/0]
** TODO Menus [0/0]
** TODO Player Customization [0/0]

* Ideas

- Each player can battle through the Story Train via DM with the bot,
  but when they reach Story Lord they unlock the boss battle room in
  the Discord server where they get to fight Story Lord alongside any
  other players who have made it to the final boss.
- Each player begins with only one class option. Something basic like
  warrior. More class options are unlocked by events during
  gameplay. For example, killing an assassin would unlock the assassin
  class. Or killing a wizard, picking up his spellbook, and attempting
  to read it would unlock the wizard class.

